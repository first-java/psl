<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.csp.tanghPailiao.ex.dao.CalculateDao">

	<!-- 自定义结果集,可以将sql语句查询的Resultset结果集与实体类一一对应 -->
	<resultMap type="com.csp.tanghPailiao.entity.Calculate" id="cc">
		<!-- 用于主键的映射 -->
		<!-- <id column="id" property="id" javaType="int" /> -->
		<result column="LOTHEAD" property="lotHead" javaType="java.lang.String"
			jdbcType="VARCHAR" />
		<result column="EACHWEIGHT" property="eachWeight" javaType="java.lang.String"
			jdbcType="VARCHAR" />
		<result column="ID" property="id" javaType="java.lang.String"
			jdbcType="VARCHAR" />
		<result column="BIN" property="bin" javaType="java.lang.String"
			jdbcType="VARCHAR" />
		<result column="SEXIAN" property="sexian" javaType="java.lang.String"
			jdbcType="VARCHAR" />
	</resultMap>

	<delete id="delAll">
		TRUNCATE TABLE SYS_PSL.CSP_CALCULATE
	</delete>

	<insert id="saveCal" parameterType="com.csp.tanghPailiao.entity.Calculate">
		insert into
		SYS_PSL.CSP_CALCULATE
		(LOTHEAD,EACHWEIGHT,ID,BIN,SEXIAN,barcode,qty,project1,ng_Bin,baofei_Bin,workId,createtime)
		values(#{lotHead,jdbcType=VARCHAR},
		#{eachWeight,jdbcType=VARCHAR},
		#{id,jdbcType=VARCHAR},
		#{bin,jdbcType=VARCHAR},
		#{sexian,jdbcType=VARCHAR},
		#{barcode,jdbcType=VARCHAR},
		#{qty,jdbcType=VARCHAR},
		#{project1,jdbcType=VARCHAR},
		#{ngBin,jdbcType=VARCHAR},
		#{baofeiBin,jdbcType=VARCHAR},
		#{workId,jdbcType=VARCHAR},
		sysdate)
	</insert>
	<insert id="saveCal2" parameterType="java.util.List"
		useGeneratedKeys="false">
		insert into
		SYS_PSL.CSP_CALCULATE
		(LOTHEAD,EACHWEIGHT,ID,BIN,SEXIAN,barcode,qty,project1,ng_Bin,baofei_Bin,workId,createtime)
		<foreach collection="list" item="counter" index="index"
			separator="union all">
			(SELECT
			#{counter.lotHead,jdbcType=VARCHAR},
			#{counter.eachWeight,jdbcType=VARCHAR},
			#{counter.id,jdbcType=VARCHAR},
			#{counter.bin,jdbcType=VARCHAR},
			#{counter.sexian,jdbcType=VARCHAR},
			#{counter.barcode,jdbcType=VARCHAR},
			#{counter.qty,jdbcType=VARCHAR},
			#{counter.project1,jdbcType=VARCHAR},
			#{counter.ngBin,jdbcType=VARCHAR},
			#{counter.baofeiBin,jdbcType=VARCHAR},
			#{counter.workId,jdbcType=VARCHAR},
			sysdate
			FROM DUAL)
		</foreach>
	</insert>

	<select id="queryQty" resultType="java.lang.String" resultMap="cc">
		select distinct lothead from SYS_PSL.CSP_CALCULATE order by lothead
	</select>
	<select id="selectQty" resultType="java.lang.String" resultMap="cc">
		select * from SYS_PSL.CSP_CALCULATE where
		lotHead=substr(#{lotType,jdbcType=VARCHAR},0,7)
		<if test="id != null and id !='' ">
			and id= #{id,jdbcType=VARCHAR}
		</if>
	</select>
	<select id="selectProID" resultType="java.lang.String"
		resultMap="cc">
		select * from SYS_PSL.CSP_CALCULATE where
		lotHead=substr(#{lotType,jdbcType=VARCHAR},0,7)
		and
		id=#{id,jdbcType=VARCHAR}
	</select>
	<select id="selectFan" resultType="java.lang.String" resultMap="cc">

		SELECT V.LOTHEAD,V.ID,MAX(','||V.BIN||',') AS bin
		,MAX(','||V.NG_BIN||',') AS ngBin,MAX(','||V.BAOFEI_BIN||',') AS
		baofeiBin
		FROM
		(
		SELECT B.LOTHEAD,B.ID,
		TO_CHAR(WM_CONCAT(LB.BIN_ID)) AS
		BIN,
		'' AS NG_BIN,
		'' AS BAOFEI_BIN
		FROM
		(
		SELECT R.LOTHEAD,R.ID,
		NVL(R.BIN_FROM,R.BIN_TO) AS BIN_FROM,
		R.BIN_TO
		FROM
		(
		SELECT
		X.LOTHEAD,X.ID,
		SUBSTR(X.BIN_S,1,INSTR(X.BIN_S,'~')-1) AS BIN_FROM,
		SUBSTR(X.BIN_S,INSTR(X.BIN_S,'~')+1,255) AS BIN_TO
		FROM
		(
		SELECT
		C.LOTHEAD,C.ID,
		REGEXP_SUBSTR(C.BIN,'[^|]+',1,X.CLEVEL) AS BIN_S
		FROM
		SYS_PSL.CSP_CALCULATE C,
		(SELECT LEVEL AS CLEVEL FROM DUAL CONNECT BY
		LEVEL&lt;=20) X
		WHERE
		X.CLEVEL&lt;=LENGTH(C.BIN)-LENGTH(REPLACE(C.BIN,'|'))+1
		AND C.BIN IS
		NOT NULL
		and c.lothead=#{lotHead,jdbcType=VARCHAR}
		and
		c.id=#{id,jdbcType=VARCHAR}
		) X
		) R
		) B,(SELECT LEVEL AS BIN_ID FROM DUAL
		CONNECT BY LEVEL&lt;=300) LB
		WHERE LB.BIN_ID>=B.BIN_FROM
		AND
		LB.BIN_ID&lt;=B.BIN_TO
		GROUP BY B.LOTHEAD,B.ID
		UNION ALL
		SELECT
		B.LOTHEAD,B.ID,
		'' AS bin,
		TO_CHAR(WM_CONCAT(LB.BIN_ID)) AS ngBin,
		'' AS
		baofeiBin
		FROM
		(
		SELECT R.LOTHEAD,R.ID,
		NVL(R.NG_BIN_FROM,R.NG_BIN_TO) AS
		NG_BIN_FROM,
		R.NG_BIN_TO
		FROM
		(
		SELECT X.LOTHEAD,X.ID,
		SUBSTR(X.NG_BIN_S,1,INSTR(X.NG_BIN_S,'~')-1) AS NG_BIN_FROM,
		SUBSTR(X.NG_BIN_S,INSTR(X.NG_BIN_S,'~')+1,255) AS NG_BIN_TO
		FROM
		(
		SELECT C.LOTHEAD,C.ID,
		REGEXP_SUBSTR(C.NG_BIN,'[^|]+',1,X.CLEVEL) AS
		NG_BIN_S
		FROM SYS_PSL.CSP_CALCULATE C,
		(SELECT LEVEL AS CLEVEL FROM DUAL
		CONNECT BY LEVEL&lt;=20) X
		WHERE
		X.CLEVEL&lt;=LENGTH(C.NG_BIN)-LENGTH(REPLACE(C.NG_BIN,'|'))+1
		AND
		C.NG_BIN IS NOT NULL
		and c.lothead=#{lotHead,jdbcType=VARCHAR}
		and
		c.id=#{id,jdbcType=VARCHAR}
		) X
		) R
		) B,(SELECT LEVEL AS BIN_ID FROM DUAL
		CONNECT BY LEVEL&lt;=300) LB
		WHERE LB.BIN_ID>=B.NG_BIN_FROM
		AND
		LB.BIN_ID &lt;=B.NG_BIN_TO
		GROUP BY B.LOTHEAD,B.ID
		UNION ALL
		SELECT
		B.LOTHEAD,B.ID,
		'' AS bin,
		'' AS ngBin,
		TO_CHAR(WM_CONCAT(LB.BIN_ID)) AS
		baofeiBin
		FROM
		(
		SELECT R.LOTHEAD,R.ID,
		NVL(R.BAOFEI_BIN_FROM,R.BAOFEI_BIN_TO) AS BAOFEI_BIN_FROM,
		R.BAOFEI_BIN_TO
		FROM
		(
		SELECT X.LOTHEAD,X.ID,
		SUBSTR(X.BAOFEI_BIN_S,1,INSTR(X.BAOFEI_BIN_S,'~')-1) AS
		BAOFEI_BIN_FROM,
		SUBSTR(X.BAOFEI_BIN_S,INSTR(X.BAOFEI_BIN_S,'~')+1,255) AS
		BAOFEI_BIN_TO
		FROM
		(
		SELECT C.LOTHEAD,C.ID,
		REGEXP_SUBSTR(C.BAOFEI_BIN,'[^|]+',1,X.CLEVEL) AS BAOFEI_BIN_S
		FROM
		SYS_PSL.CSP_CALCULATE C,
		(SELECT LEVEL AS CLEVEL FROM DUAL CONNECT BY
		LEVEL&lt;=20) X
		WHERE X.CLEVEL
		&lt;=LENGTH(C.BAOFEI_BIN)-LENGTH(REPLACE(C.BAOFEI_BIN,'|'))+1
		AND
		C.BAOFEI_BIN IS NOT NULL
		and c.lothead=#{lotHead,jdbcType=VARCHAR}
		and
		c.id=#{id,jdbcType=VARCHAR}
		) X
		) R
		) B,(SELECT LEVEL AS BIN_ID FROM DUAL
		CONNECT BY LEVEL&lt;=300) LB
		WHERE LB.BIN_ID>=B.BAOFEI_BIN_FROM
		AND
		LB.BIN_ID &lt;=B.BAOFEI_BIN_TO
		GROUP BY B.LOTHEAD,B.ID
		) V
		GROUP BY
		V.LOTHEAD,V.ID
	</select>

	<insert id="zdpMinToMax" parameterType="com.csp.tanghPailiao.entity.Calculate">
		insert into
		SYS_PSL.CSP_ZDP_SCOPE
		(ZDPMIN,ZDPMAX,WORKID,CREATETIME)
		values(#{zdpMin,jdbcType=VARCHAR},
		#{zdpMax,jdbcType=VARCHAR},#{workId,jdbcType=VARCHAR},sysdate)
	</insert>
	<insert id="saveRetypeLabel" parameterType="com.csp.tanghPailiao.entity.Calculate">
		insert into
		sys_psl.csp_retype_label
		(project1,bagname,lottype,id,bin,qty,lotid,workid,createtime,weight)
		values(#{project1,jdbcType=VARCHAR},#{bagName,jdbcType=VARCHAR},
		#{lotType,jdbcType=VARCHAR},#{id,jdbcType=VARCHAR},#{bin,jdbcType=VARCHAR},
		#{qty,jdbcType=VARCHAR},#{lotId,jdbcType=VARCHAR},#{workId,jdbcType=VARCHAR},
		sysdate,#{weight,jdbcType=VARCHAR})
	</insert>
	<select id="selectZdp" resultType="java.lang.String" resultMap="cc">
		select * from SYS_PSL.CSP_ZDP_SCOPE where createtime=(select
		max(createtime) from SYS_PSL.CSP_ZDP_SCOPE )
	</select>

	<delete id="csp_bag_hedai">
		truncate table sys_psl.csp_bag_hedai
	</delete>
	<delete id="csp_barcodetofg">
		truncate table sys_psl.csp_barcodetofg
	</delete>
	<delete id="csp_bf_bag">
		truncate table sys_psl.csp_bf_bag
	</delete>
	<delete id="csp_binunitidtofg">
		truncate table sys_psl.csp_binunitidtofg
	</delete>
	<delete id="csp_chk_bagname_info">
		truncate table sys_psl.csp_chk_bagname_info
	</delete>
	<delete id="csp_chk_fg_info">
		truncate table sys_psl.csp_chk_fg_info
	</delete>
	<delete id="csp_chk_log">
		truncate table sys_psl.csp_chk_log
	</delete>

	<delete id="csp_eqpt_label">
		truncate table sys_psl.csp_eqpt_label
	</delete>
	<delete id="csp_fenxuantofg">
		truncate table sys_psl.csp_fenxuantofg
	</delete>
	<delete id="csp_fg_ruku">
		truncate table sys_psl.csp_fg_ruku
	</delete>
	<delete id="csp_label">
		truncate table sys_psl.csp_label
	</delete>
	<delete id="CSP_CHK_Log">
		truncate table sys_psl.CSP_CHK_Log
	</delete>
	<delete id="CSP_CHK_FG_INFO">
		truncate table sys_psl.CSP_CHK_FG_INFO
	</delete>
	<delete id="CSP_CHK_BAGNAME_INFO">
		truncate table sys_psl.CSP_CHK_BAGNAME_INFO
	</delete>
	<delete id="csp_pl_qc">
		truncate table sys_psl.csp_pl_qc
	</delete>
	<delete id="csp_pl_qcqj">
		truncate table sys_psl.csp_pl_qcqj
	</delete>
	<delete id="csp_pl_scqj">
		truncate table sys_psl.csp_pl_scqj
	</delete>
	<delete id="csp_retype_label">
		truncate table sys_psl.csp_retype_label
	</delete>
	<delete id="csp_tape_check_info">
		truncate table sys_psl.csp_tape_check_info
	</delete>
	<delete id="CSP_FG_EQPTPRO">
		truncate table SYS_PSL.CSP_FG_EQPTPRO
	</delete>
	<delete id="CSP_BD_WEILIAO">
		truncate table SYS_PSL.CSP_BD_WEILIAO
	</delete>
	<delete id="CSP_PL_FGSHELF_GOODS">
		truncate table SYS_PSL.CSP_PL_FGSHELF_GOODS
	</delete>

	<update id="updateQty">
		update SYS_PSL.CSP_PL_FGSHELF_GOODS set qty=mes_qty
		where leixing='底板散芯'
	</update>
	<update id="updateYQty">
		update SYS_PSL.CSP_PL_FGSHELF_GOODS set MES_QTY=qty
		where bagname like 'Y%'
	</update>
	<update id="updateNQty">
		update SYS_PSL.CSP_PL_FGSHELF_GOODS set MES_QTY=qty
		where leixing='分光NG品'
	</update>


	<insert id="insertL">
		insert into sys_psl.csp_pl_qc (bagname)
		select bagname
		from SYS_PSL.CSP_PL_FGSHELF_GOODS where
		leixing='良品BIN'
		and bagname
		not
		in (select bagname
		from sys_psl.csp_pl_qc)

	</insert>
	<update id="updateStatus"> update sys_psl.csp_pl_qc set
		status='OK',createtime=sysdate
	</update>


	<update id="updateBdeqpt">update SYS_PSL.CSP_BD_EQPT
		set status = '',
		lottype =
		'',
		id = '',
		bdlotid = '',
		bin = '',
		createtime = '',
		sexian = ''
	</update>

	<update id="updateFgeqpt"> update sys_psl.csp_fg_eqpt
		set status = '',
		lottype =
		'',
		id = '',
		fglotid = '',
		workid = '',
		createtime = '',
		sexian = ''
	</update>

	<update id="updateCG">
		update SYS_PSL.CSP_PL_FGSHELF_goods set deposit='重工'
		where deposit='CG'
	</update>

	<update id="updateWFG">
		update SYS_PSL.CSP_PL_FGSHELF_goods set deposit='未分光'
		where deposit='WFG'
	</update>
	<update id="updateYFG">
		update SYS_PSL.CSP_PL_FGSHELF_goods set deposit='已分光'
		where deposit='YFG'
	</update>

	<update id="updateCHIP">
		update SYS_PSL.CSP_PL_FGSHELF_goods set
		leixing='底板散芯' where leixing='CHIP'
	</update>
	<update id="updateNG">
		update SYS_PSL.CSP_PL_FGSHELF_goods set
		leixing='分光NG品' where leixing='NG'
	</update>
	<update id="updateGOOD">
		update SYS_PSL.CSP_PL_FGSHELF_goods set
		leixing='良品BIN' where leixing='GOOD'
	</update>
	<select id="selectRange" resultType="java.lang.String"
		resultMap="cc">
 
	select minrange zdpMin,maxrange zdpMax from SYS_PSL.CSP_GOOD_PRO_RANGE where
		createtime=(select max(createtime) from SYS_PSL.CSP_GOOD_PRO_RANGE t )
	</select>

</mapper>