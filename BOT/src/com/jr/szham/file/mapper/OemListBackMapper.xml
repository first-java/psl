<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jr.szham.file.dao.OemListBackDao">

	<!-- 自定义结果集,可以将sql语句查询的Resultset结果集与实体类一一对应 -->
	<resultMap type="com.jr.szham.entity.OemListBack" id="myOemListBack">
		<!-- 用于主键的映射 -->
		<!-- 其他列映射都是用result -->
		<result column="DOCUMENT_RRN" property="DOCUMENT_RRN" javaType="java.lang.String"
			jdbcType="VARCHAR" />
		<result column="STORAGE_ID" property="STORAGE_ID" javaType="java.lang.String"
			jdbcType="VARCHAR" />
		<result column="MATERIAL_NAME" property="MATERIAL_NAME"
			javaType="java.lang.String" jdbcType="VARCHAR" />
		<result column="BIN_ID" property="BIN_ID" javaType="java.lang.String"
			jdbcType="VARCHAR" />
		<result column="LOT_HEAD" property="LOT_HEAD" javaType="java.lang.String"
			jdbcType="VARCHAR" />
		<result column="DIE_QTY" property="DIE_QTY" javaType="java.lang.String"
			jdbcType="VARCHAR" />
		<result column="MIN_BARCODE_ID" property="MIN_BARCODE_ID"
			javaType="java.lang.String" jdbcType="VARCHAR" />
		<result column="MAX_BARCODE_ID" property="MAX_BARCODE_ID"
			javaType="java.lang.String" jdbcType="VARCHAR" />
		<result column="PCS" property="PCS" javaType="java.lang.String"
			jdbcType="VARCHAR" />

	</resultMap>

	<!-- 插入代工产品的流水号数据 -->
	<insert id="data">
		INSERT INTO T_LBMAIN.T_BARCODE
		(BARCODE_RRN,BARCODE_HEAD,BARCODE_SEQ,barcode_string,login_rrn,create_timestamp,barcode_type,
		based_barcode_rrn,based_barcode_string,init_qty,root_barcode_rrn,root_barcode_string)
		SELECT
		X.BARCODE_RRN+Y.LID AS
		BARCODE_RRN,X.BARCODE_HEAD,X.BARCODE_SEQ+Y.LID
		AS BARCODE_SEQ,
		X.BARCODE_HEAD||CASE WHEN
		LENGTH(X.BARCODE_SEQ+Y.LID)&lt;8 THEN
		SUBSTR('00000000'||TO_CHAR(X.BARCODE_SEQ+Y.LID),-8) ELSE
		TO_CHAR(X.BARCODE_SEQ+Y.LID) END AS BARCODE_STRING,
		X.LOGIN_RRN,X.CREATE_TIMESTAMP,X.BARCODE_TYPE,X.BASED_BARCODE_RRN,X.BASED_BARCODE_STRING,X.INIT_QTY,X.ROOT_BARCODE_RRN,X.ROOT_BARCODE_STRING
		FROM
		(
		SELECT (SELECT MAX(BARCODE_RRN) FROM T_LBMAIN.T_BARCODE WHERE
		BARCODE_RRN&lt;1000000000) AS BARCODE_RRN,'DA'||(SELECT
		SUBSTR(T.LOTHEAD,1,2) FROM T_LBMAIN.T_TMP_OEMLIST T WHERE ROWNUM=1) AS
		BARCODE_HEAD,
		(SELECT NVL(MAX(BARCODE_SEQ),0) FROM T_LBMAIN.T_BARCODE
		TB WHERE
		UPPER(TB.BARCODE_HEAD)='DA'||(SELECT SUBSTR(T.LOTHEAD,1,2)
		FROM
		T_LBMAIN.T_TMP_OEMLIST T WHERE ROWNUM=1)) AS BARCODE_SEQ,
		NULL AS
		BARCODE_STRING,
		(SELECT MAX(LOGIN_RRN) AS LOGIN_RRN FROM
		T_USER.L_LOGIN_HISTORY WHERE
		USER_RRN=1000000000) AS LOGIN_RRN,
		SYSDATE
		AS CREATE_TIMESTAMP,1 AS BARCODE_TYPE,
		NULL AS BASED_BARCODE_RRN,NULL
		AS BASED_BARCODE_STRING,NULL AS
		INIT_QTY,NULL AS ROOT_BARCODE_RRN,NULL
		AS ROOT_BARCODE_STRING
		FROM DUAL
		) X,
		(
		SELECT LEVEL AS LID
		FROM DUAL
		CONNECT BY LEVEL&lt;=(SELECT SUM(PCS) FROM T_LBMAIN.T_TMP_OEMLIST)
		) Y
	</insert>
	<!-- 生成特采单号 -->
	<insert id="oddNum">
		INSERT INTO T_LBMAIN.T_DOCUMENT
		SELECT
		T_LBMAIN.DOCUMENT_RRN.NEXTVAL AS DOCUMENT_RRN,
		'D'||TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS') AS DOCUMENT_ID,
		'代工導入'||TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS') AS DOCUMENT_DESC,
		'代工原始數據導入'||TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS') AS DOCUMENT_DESC,
		(SELECT MAX(LOGIN_RRN) AS LOGIN_RRN FROM T_USER.L_LOGIN_HISTORY WHERE
		USER_RRN=1000000000) AS CREATE_LOGIN_RRN,
		SYSDATE AS CREATE_TIMESTAMP,
		1 AS DOCUMENT_ATTR
		FROM DUAL
	</insert>

	<!-- 插入参数数据 -->
	<insert id="para">
		INSERT INTO T_LBMAIN.T_DOCUMENT_DETAIL
		SELECT
		T_LBMAIN.DOCUMENT_RRN.CURRVAL AS DOCUMENT_RRN,
		TB.BARCODE_STRING AS
		BARCODE_ID,
		TB1.STORAGEDESC AS STORAGE_ID,
		TB1.MATERIALNAME AS
		MATERIAL_NAME,
		NULL AS DA_VFLLINE,NULL AS DA_VFULINE,NULL AS
		DA_IRLLINE,NULL AS
		DA_IRULINE,NULL AS MATERIAL_NAME_OEM,
		TB1.DIEQTY AS
		DIE_QTY,
		TB1.LOTHEAD AS LOT_HEAD,
		TB1.BINID AS BIN_ID
		FROM
		T_LBMAIN.T_BARCODE TB,
		(
		SELECT
		Y.BARCODE_HEAD,TTO.CID,TTO.LOTHEAD,TTO.STORAGEDESC,TTO.BINID,TTO.MATERIALNAME,TTO.DIEQTY,
		CASE WHEN TTO.CID=1 THEN 1 ELSE (SELECT SUM(TTO1.PCS) FROM
		T_LBMAIN.T_TMP_OEMLIST TTO1 WHERE TTO1.CID&lt;TTO.CID)+1
		END+Y.MIN_SEQ-1 AS MIN_SEQ,
		(SELECT SUM(TTO1.PCS) FROM
		T_LBMAIN.T_TMP_OEMLIST TTO1 WHERE
		TTO1.CID&lt;=TTO.CID)+Y.MIN_SEQ-1 AS
		MAX_SEQ
		FROM T_LBMAIN.T_TMP_OEMLIST TTO,
		(SELECT
		TB.BARCODE_HEAD,MIN(TB.BARCODE_SEQ) AS MIN_SEQ FROM
		T_LBMAIN.T_BARCODE
		TB
		WHERE (TB.LOGIN_RRN,TB.CREATE_TIMESTAMP)=(SELECT
		TB.LOGIN_RRN,MAX(TB.CREATE_TIMESTAMP) AS CREATE_TIMESTAMP
		FROM
		T_LBMAIN.T_BARCODE TB WHERE TB.LOGIN_RRN=(SELECT MAX(LOGIN_RRN) AS
		LOGIN_RRN
		FROM T_USER.L_LOGIN_HISTORY WHERE USER_RRN=1000000000)
		GROUP
		BY TB.LOGIN_RRN)
		GROUP BY TB.BARCODE_HEAD) Y
		) TB1
		WHERE 1=1
		AND
		TB.BARCODE_TYPE=1
		AND TB.BARCODE_HEAD=TB1.BARCODE_HEAD
		AND
		TB.BARCODE_SEQ>=TB1.MIN_SEQ
		AND TB.BARCODE_SEQ&lt;=TB1.MAX_SEQ
	</insert>


	<delete id="delTable">
		DROP TABLE T_LBMAIN.T_TMP_OEM_CURRSEQ
	</delete>
	<update id="create">
		CREATE TABLE T_LBMAIN.T_TMP_OEM_CURRSEQ AS
		SELECT
		T_LBMAIN.DOCUMENT_RRN.CURRVAL AS CURR_SEQUENCE FROM DUAL
	</update>
	<select id="down" resultMap="myOemListBack">
		SELECT *
		FROM
		(
		SELECT
		TDD.DOCUMENT_RRN,TDD.STORAGE_ID,TDD.MATERIAL_NAME,TDD.BIN_ID,TDD.LOT_HEAD,TDD.DIE_QTY,
		MIN(TDD.BARCODE_ID) AS MIN_BARCODE_ID,MAX(TDD.BARCODE_ID) AS
		MAX_BARCODE_ID,COUNT(1) AS PCS

		FROM T_LBMAIN.T_DOCUMENT TD,
		T_LBMAIN.T_DOCUMENT_DETAIL TDD
		WHERE TD.DOCUMENT_RRN=TDD.DOCUMENT_RRN

		AND TD.DOCUMENT_ID LIKE 'D'||TO_CHAR(SYSDATE,'YYYYMMDD')||'%'
		GROUP BY
		TDD.DOCUMENT_RRN,TDD.STORAGE_ID,TDD.MATERIAL_NAME,TDD.BIN_ID,TDD.LOT_HEAD,TDD.DIE_QTY
		) X
		WHERE X.DOCUMENT_RRN=(SELECT C.CURR_SEQUENCE FROM
		T_LBMAIN.T_TMP_OEM_CURRSEQ C)
		ORDER BY X.MIN_BARCODE_ID
	</select>
</mapper>